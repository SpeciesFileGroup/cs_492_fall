# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import protob_pb2 as protob__pb2


class BHLIndexStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Ver = channel.unary_unary(
        '/protob.BHLIndex/Ver',
        request_serializer=protob__pb2.Void.SerializeToString,
        response_deserializer=protob__pb2.Version.FromString,
        )
    self.Pages = channel.unary_stream(
        '/protob.BHLIndex/Pages',
        request_serializer=protob__pb2.WithText.SerializeToString,
        response_deserializer=protob__pb2.Page.FromString,
        )


class BHLIndexServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Ver(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Pages(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BHLIndexServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Ver': grpc.unary_unary_rpc_method_handler(
          servicer.Ver,
          request_deserializer=protob__pb2.Void.FromString,
          response_serializer=protob__pb2.Version.SerializeToString,
      ),
      'Pages': grpc.unary_stream_rpc_method_handler(
          servicer.Pages,
          request_deserializer=protob__pb2.WithText.FromString,
          response_serializer=protob__pb2.Page.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'protob.BHLIndex', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
